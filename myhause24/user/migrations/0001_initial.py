# Generated by Django 3.2.13 on 2022-05-12 17:26

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24, unique=True)),
                ('statistics', models.BooleanField(default=False)),
                ('cash_box', models.BooleanField(default=False)),
                ('receipts', models.BooleanField(default=False)),
                ('personal_accounts', models.BooleanField(default=False)),
                ('apartments', models.BooleanField(default=False)),
                ('owners', models.BooleanField(default=False)),
                ('houses', models.BooleanField(default=False)),
                ('messages', models.BooleanField(default=False)),
                ('call_requests', models.BooleanField(default=False)),
                ('counters', models.BooleanField(default=False)),
                ('site_management', models.BooleanField(default=False)),
                ('services', models.BooleanField(default=False)),
                ('tariffs', models.BooleanField(default=False)),
                ('roles', models.BooleanField(default=False)),
                ('users', models.BooleanField(default=False)),
                ('requisites', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('patronymic', models.CharField(blank=True, max_length=150)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile/')),
                ('date_of_birth', models.DateField(blank=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('viber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('telegram', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('status', models.CharField(choices=[('active', 'Active'), ('new', 'New'), ('disabled', 'Disabled')], default='new', max_length=8)),
                ('user_id', models.CharField(blank=True, max_length=32)),
                ('about_owner', models.TextField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
